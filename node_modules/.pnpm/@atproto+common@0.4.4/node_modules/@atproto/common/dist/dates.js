"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.toSimplifiedISOSafe = void 0;
const iso_datestring_validator_1 = require("iso-datestring-validator");
// Normalize date strings to simplified ISO so that the lexical sort preserves temporal sort.
// Rather than failing on an invalid date format, returns valid unix epoch.
function toSimplifiedISOSafe(dateStr) {
    const date = new Date(dateStr);
    if (isNaN(date.getTime())) {
        return new Date(0).toISOString();
    }
    const iso = date.toISOString();
    if (!(0, iso_datestring_validator_1.isValidISODateString)(iso)) {
        // Occurs in rare cases, e.g. where resulting UTC year is negative. These also don't preserve lexical sort.
        return new Date(0).toISOString();
    }
    return iso; // YYYY-MM-DDTHH:mm:ss.sssZ
}
exports.toSimplifiedISOSafe = toSimplifiedISOSafe;
//# sourceMappingURL=dates.js.map